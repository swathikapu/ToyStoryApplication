@model ToyStoryApplication.Models.Franchise

@{
    ViewBag.Title = "Create";
}
<link href="~/Content/Site.css" rel="stylesheet" />

@using (Html.BeginForm("Create", "Franchises", FormMethod.Post, new { enctype = "multipart/form-data", id="createForm" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Create New Franchise</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*name="ImageFile" will bind this input to the property created in class*@
                <input type="file" name="ImageFile" required class="btn btn-primary btn-sm float-left">
                @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Origin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.Origin, new { htmlAttributes = new { @placeholder = "Enter country of origin", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Origin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstAppearance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstAppearance, new { htmlAttributes = new { @placeholder = "Enter year of first appearance", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstAppearance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary btn-sm yellow-btn" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Franchises", "Index", new { }, new { @class = "btn btn-primary btn-sm yellow-btn" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

