@model ToyStoryApplication.Models.Franchise

@{
    ViewBag.Title = "Create";
}
<link href="~/Content/Site.css" rel="stylesheet" />

<div class=" create-body">
    <div class="creates-image">
        <h2>Create</h2>
        @using (Html.BeginForm("Create", "Franchises", FormMethod.Post, new { enctype = "multipart/form-data", id="createForm" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <h4>Franchise</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*name="ImageFile" will bind this input to the property created in class*@
                        <input type="file" name="ImageFile" required>
                        @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Origin, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.EditorFor(model => model.Origin, new { htmlAttributes = new { @placeholder = "Enter country of origin", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Origin, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstAppearance, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstAppearance, new { htmlAttributes = new { @placeholder = "Enter year of first appearance", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstAppearance, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="create-image">
        <img src="~/Content/Images/create1.jpg" />
    </div>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
